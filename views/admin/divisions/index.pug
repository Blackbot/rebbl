extends ../layout.pug



block scripts
  script(src="https://cdn2.rebbl.net/scripts/knockout-3.4.2.js")
  script.
    function DateModel() {
        const self = this;
        self.data = ko.observableArray([]);
        self.teams = ko.observableArray([]);
        self.loading = ko.observable(true);
        self.selectedDivision = ko.observable();

        self.selectedLeague = ko.observableArray();
        self.unplayed = ko.observableArray();

        self.filteredData = ko.computed(function(){
          if ( self.selectedLeague()){
            return self.data().filter(x => self.selectedLeague() === x.league).sort((a,b) => a.competition>b.competition ? 1: -1);
          }

          return [];
        });


        self.toggleLeague= async function(l){
          self.selectedLeague(l);
          let result = await fetch(`/api/v1/admin/divisions/unplayed/${self.selectedLeague()}`);
          if (result.ok)
            model.unplayed(await result.json());

        }
        self.toggleDivision=async function(d){
          self.selectedDivision(d);
          let result =await fetch(`/api/v1/admin/divisions/${d.competition_id}`);
          if (result.ok)
            model.teams(await result.json());
        }
        self.expel= async function(d){
          let result =await fetch(`/api/v1/admin/divisions/${self.selectedDivision().competition_id}/${d.id}`,{method:"DELETE"});
          
          if (result.ok){
            let data = await result.json();
            if (data.Message === "") {
              $(".alert-success").html("Expelled successfully!");
              $(".alert-success").show();
            } else {
              $(".alert-danger").html(data.Message);
              $(".alert-danger").show();
            }
            setTimeout(() => $(".alert").hide(),3750);
          }
        }
        self.refresh=async function(g){
          let result = await fetch(`/api/v1/admin/divisions/refresh/${self.selectedDivision().league}/${self.selectedDivision().competition}`);
          if (result.ok){
            $(".alert-success").html("Refreshed!");
            $(".alert-success").show();
            setTimeout(() => $(".alert").hide(),3750);
          }
        }

        self.reload = async function(contest_id){
          let response = await fetch(`/api/v1/admin/unplayed/${contest_id}`,{method:"POST"});
          if(response.ok)
            self.unplayed().splice(self.unplayed().findIndex(x => x.contest_id === Number(contest_id)),1);
        }
    }

    const model = new DateModel();

    $(document).ready(async function(){
        $('.alert').hide();
        ko.applyBindings(model);

        let result = await fetch("/api/v1/admin/divisions");

        if (result.ok)
          model.data(await result.json());

    });


block content
  div(class="container")
    div(class="row col-12")
      div(class="btn-group-toggle" data-toggle="buttons")
        label(class="btn btn-outline-primary mx-1" data-bind="click: $root.toggleLeague.bind($data,'REBBL - Big O')")
          input(type="radio" checked autocomplete="off")       
          span Big O
        label(class="btn btn-outline-primary mx-1" data-bind="click: $root.toggleLeague.bind($data,'REBBL - GMan')")
          input(type="radio" checked autocomplete="off")       
          span GMan
        label(class="btn btn-outline-primary mx-1" data-bind="click: $root.toggleLeague.bind($data,'REBBL - REL')" )
          input(type="radio" checked autocomplete="off")       
          span REL
        label(class="btn btn-outline-primary mx-1" data-bind="click: $root.toggleLeague.bind($data,'ReBBRL Upstarts')" )
          input(type="radio" checked autocomplete="off")       
          span Upstarts
        label(class="btn btn-outline-primary mx-1" data-bind="click: $root.toggleLeague.bind($data,'ReBBRL Minors League')" )
          input(type="radio" checked autocomplete="off")       
          span Minors
        label(class="btn btn-outline-primary mx-1" data-bind="click: $root.toggleLeague.bind($data,'ReBBRL College League')")
          input(type="radio" checked autocomplete="off")       
          span College
        label(class="btn btn-outline-primary mx-1" data-bind="click: $root.toggleLeague.bind($data,'ReBBL Playoffs')")
          input(type="radio" checked autocomplete="off")       
          span ReBBL Playoffs
    br  
    div(class="row col-12")
      div(class="btn-group-toggle" data-toggle="buttons")
        // ko foreach: filteredData
        label(class="btn  btn-outline-primary m-1" data-bind="click: $root.toggleDivision")
          input(type="radio" autocomplete="off") 
          span(data-bind="text: $data.competition") 
        // /ko
    br
    // ko if: selectedDivision()
    div(class="row col-12")
      button(data-bind="click:$root.refresh" class="btn btn-small btn-success" style="margin:0px 10px")
        i(class="fa fa-refresh")
      span update division for new coaches
    // /ko
    hr
    div(class="row col-12")
      div(class="col-3") Unsynced games
      div(class="col-3") 
    hr
    div(data-bind="foreach: unplayed" )
      div(class="row col-12")
        div(class="col-1")
          button(data-bind="click:$root.reload.bind($data,contest_id)" class="btn btn-small btn-success" style="margin:0px 10px")
            i(class="fa fa-repeat")
        div(class="col-6")
          span(data-bind="text: competition")
          span(data-bind="text: ` round ${round}`")
        div(class="col-3")
          span(data-bind="text: opponents[0].coach ? opponents[0].coach.name : ''")
          span &nbsp; vs &nbsp; 
          span(data-bind="text: opponents[1].coach ? opponents[1].coach.name : ''")
    hr
    div(class="row col-12")
      div(class="col-3") Expel admin teams below
      div(class="col-3") 
    hr
    div(data-bind="foreach: teams" )
      div(class="row col-12")
        div(class="col-3")
          span(data-bind="text: team")
        div(class="col-3")
          button(data-bind="click:$root.expel" class="btn btn-small btn-success" style="margin:0px 10px")
            i(class="fa fa-gavel")
          span expel

    div(class="alert alert-success" role="alert")
    div(class="alert alert-danger" role="alert")
      
  




