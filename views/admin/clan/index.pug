extends ../layout.pug
include ../nav-link

block vars
  - let options = {active: league, title: "REBBL SEASON 8", company:"clan"}
  - let fullJquery = true
  - if (!active) { var active =  (options && options.active) ? options.active : "" }
  - let company = "clan";

block head
  style.
    .MatchRow-contentWrapper--hover:hover .text-info{color:#e67b00 !important}
block content
  div.Background.u-bottomPadding--large.u-topPadding--medium
    div.container.navcontainer(data-index="0" id="app" style="max-width:1650px")
      div.row.col-12
        div.btn-group-toggle(data-toggle="buttons")
          template(v-for="x in 5")
            label.btn.btn-outline-primary(style="margin-right: 15px" @click="load(x)")
              input(type="radio" checked autocomplete="off")       
              span Division {{x}}
      br
      template(v-if="!schedule && schedules.length > 0")
        div.row
          template(v-for="row in numberOfRows")
            br
            div.col.table-striped(style="width:unset;display:unset" )
              div.col-12.TableHeader(style="display:block;border-bottom: 3px solid #bdbcbccf;padding-bottom: 2px;text-align:center")
                div.Standings-details.Standings-header.highlight(title="") Round {{row}}
              template(v-for="col in 5")
                div.MatchRow-contentWrapper.MatchRow-contentWrapper--hover(@click="showMatchup(_schedule(row,col))")
                  div.MatchRow-team
                    div.TeamLabel.TeamLabel--reverse
                      div: img(v-bind:src="'https://cdn2.rebbl.net/' + _schedule(row,col).home.logo" alt="" class="TeamLabel-logo" style="width:unset")
                      div.TeamLabel-info.TeamLabel-info--noScore
                        div.text-info {{ _schedule(row,col).home.clan }}
                  div.MatchRow-status
                    span.MatchStatus.MatchStatus--transparent
                      span
                        template(v-if="_schedule(row,col).home.score > _schedule(row,col).away.score")
                          span.MatchStatus-score.is-winner {{_schedule(row,col).home.score}}
                          span.MatchStatus-score -
                          span.MatchStatus-score {{_schedule(row,col).away.score}}
                        template(v-else-if="_schedule(row,col).home.score < _schedule(row,col).away.score")
                          span.MatchStatus-score {{_schedule(row,col).home.score}}
                          span.MatchStatus-score -
                          span.MatchStatus-score.is-winner {{_schedule(row,col).away.score}}
                        template(v-else)
                          span.MatchStatus-score {{_schedule(row,col).home.score}}
                          span.MatchStatus-score -
                          span.MatchStatus-score {{_schedule(row,col).away.score}}
                  div.MatchRow-team
                    div.TeamLabel
                      div: img(v-bind:src="'https://cdn2.rebbl.net/' + _schedule(row,col).away.logo" alt="" class="TeamLabel-logo" style="width:unset")
                      div.TeamLabel-info.TeamLabel-info--noScore
                        div.text-info {{ _schedule(row,col).away.clan }}

      template(v-if="schedule")
        div.row.col-12.no-gutters
          div.col-5
            div.row.col-12.border-bottom.border-info.pb-1
              div.col-10.media.text-centerd.-flex.flex-wrap.align-items-center
                div.media-body
                  h1 {{schedule.home.clan.name}}
                img(v-bind:src="`https://cdn2.rebbl.net/${schedule.home.clan.logo}`" style="max-height:120px;max-width:180px")
              div.col-2.text-right
                h1 {{schedule.home.score}}
            template(v-if="schedule.matches.length === 0")
              br
              div.row
                template(v-for="power in Object.keys(schedule.home.clan.powers)")
                  template(v-if="schedule.home.clan.powers[power] > 0")
                    div.p-1
                      button.btn.btn-outline-info.btn-sm(type="button" data-container="body" data-toggle="popover" data-placement="right" v-bind:data-title="powers.find(function(x){return x.key == power}).name" v-bind:data-content="powers.find(function(x){return x.key == power}).description")
                        | {{powers.find(function(x){return x.key == power}).name}} 
                        span.badge.badge-secondary {{schedule.home.clan.powers[power]}}
              br
              div.row
                template(v-for="team in schedule.home.clan.teams")
                  template(v-if="team")
                    div.p-1
                      a.btn.btn-outline-info.btn-sm(v-bind:href="`/clan/team/${team.team.id}`" target="_blank")
                        img(v-bind:src="`https://cdn2.rebbl.net/images/races/${team.team.idraces}.png`" style="height:40px")
                        span.text-info  {{team.team.name}}
                        img(v-bind:src="`https://cdn2.rebbl.net/images/logo/256x256/logo_${team.team.logo.toLowerCase()}.png`" style="height:40px")
                        br
                        span.badge.badge-success /u/{{reddit(schedule.home.clan,team.coach.name)}}
                        span.badge.badge-warning {{team.coach.name}}
                        span.badge.badge-info TV: {{team.team.nextMatchTV || team.team.value}}

          div.col.text-center
            h1 -
            button.btn.btn-primary.btn-sm(data-toggle="modal" data-target="#clanScore") Change score
          div.col-5
            div.row.col-12.border-bottom.border-info.pb-1
              div.col-2.text-left
                h1  {{schedule.away.score}}
              div.col-10.media.text-center.d-flex.flex-wrap.align-items-center
                img(v-bind:src="`https://cdn2.rebbl.net/${schedule.away.clan.logo}`" style="max-height:120px;max-width:180px")
                div.media-body
                  h1 {{schedule.away.clan.name}}
            template(v-if="schedule.matches.length === 0")
              br
              div.row
                template(v-for="power in Object.keys(schedule.away.clan.powers)")
                  template(v-if="schedule.away.clan.powers[power] > 0")
                    div.p-1
                      button.btn.btn-outline-info.btn-sm(type="button" data-container="body" data-toggle="popover" data-placement="right" v-bind:data-title="powers.find(function(x){return x.key == power}).name" v-bind:data-content="powers.find(function(x){return x.key == power}).description")
                        | {{powers.find(function(x){return x.key == power}).name}} 
                        span.badge.badge-secondary {{schedule.away.clan.powers[power]}}
              br
              div.row
                template(v-for="team in schedule.away.clan.teams")
                  template(v-if="team")
                    div.p-1
                      a.btn.btn-outline-info.btn-sm(v-bind:href="`/clan/team/${team.team.id}`" target="_blank")
                        img(v-bind:src="`https://cdn2.rebbl.net/images/races/${team.team.idraces}.png`" style="height:40px")
                        span.text-info  {{team.team.name}}
                        img(v-bind:src="`https://cdn2.rebbl.net/images/logo/256x256/logo_${team.team.logo.toLowerCase()}.png`" style="height:40px")
                        br
                        span.badge.badge-success /u/{{reddit(schedule.away.clan,team.coach.name)}}
                        span.badge.badge-warning {{team.coach.name}}
                        span.badge.badge-info TV: {{team.team.nextMatchTV || team.team.value}}
          button.close(type="button" aria-label="Close" style="position: absolute;right: 0;font-size: 2em;" @click="schedule=null")
            span(aria-hidden="true") &times;

        div.row.col-12.no-gutters.justify-content-center
          div.col-12.row.justify-content-center
            h1 Register Powers Used
            div.col-12.row.justify-content-center
              div.col-5
                div.row.btn-group-toggle(data-toggle="buttons")
                  template(v-for="power in Object.keys(availablePowers(schedule.home))")
                    template(v-for="t in availablePowers(schedule.home)[power]")
                      div.p-1
                        template(v-if="power === 'emergencyIntensiveCare'")
                          button(type="button" v-bind:class="getClass(schedule.home,power,t)" v-bind:aria-pressed="powerUsed(schedule.home,power,t) ? 'true':'false'" data-toggle="button")
                            | {{powers.find(function(x){return x.key == power}).name}} 
                        template(v-else-if="power === 'newBlood'")
                          button(type="button" v-bind:class="getClass(schedule.home,power,t)" @click="selectedSide=schedule.home" data-toggle="modal" data-target="#newBlood")
                            | {{powers.find(function(x){return x.key == power}).name}} 
                        template(v-else)
                          button(type="button" v-bind:class="getClass(schedule.home,power,t)" @click="togglePower($event,schedule.home,power)" v-bind:aria-pressed="powerUsed(schedule.home,power,t) ? 'true':'false'" data-toggle="button")
                            | {{powers.find(function(x){return x.key == power}).name}} 
              div.col
              div.col-5
                div.row.btn-group-toggle(data-toggle="buttons")
                  template(v-for="power in Object.keys(availablePowers(schedule.away))")
                    template(v-for="t in availablePowers(schedule.away)[power]")
                      div.p-1
                        template(v-if="power === 'emergencyIntensiveCare'")
                          button(type="button" v-bind:class="getClass(schedule.away,power,t)" v-bind:aria-pressed="powerUsed(schedule.away,power,t) ? 'true':'false'" data-toggle="button")
                            | {{powers.find(function(x){return x.key == power}).name}} 
                        template(v-else-if="power === 'newBlood'")
                          button(type="button" v-bind:class="getClass(schedule.away,power,t)" @click="selectedSide=schedule.away" data-toggle="modal" data-target="#newBlood")
                            | {{powers.find(function(x){return x.key == power}).name}} 
                        template(v-else)
                          button(type="button" v-bind:class="getClass(schedule.away,power,t)" @click="togglePower($event,schedule.away,power)" v-bind:aria-pressed="powerUsed(schedule.away,power,t) ? 'true':'false'" data-toggle="button")
                            | {{powers.find(function(x){return x.key == power}).name}} 

        template(v-if="schedule.matches.length > 0")
          div.row.col-12.no-gutters.justify-content-center
            div.col-12.row.justify-content-center
              h1 Matches
            template(v-for="match in schedule.matches")
              div.row.col-12.justify-content-center
                template(v-if="match.counted === true")
                  div.col-2 
                    template(v-if="match.status === 'scheduled'")
                      span.badge.badge-warning unconfirmed   
                    template(v-if="match.status === 'scheduled' && hasEIC(match,0)")
                      button(type="button" class="btn btn-outline-info btn-sm active float-right" @click="loadEicPlayers(match, 0)"  data-toggle="modal" data-target="#eicUse")
                        | EIC      
                a.col-8.MatchRow-contentWrapper.MatchRow-contentWrapper--hover(v-bind:href="match.match_uuid ? `/clan/match/${match.match_uuid}` : '#'" target="_blank")
                  div.MatchRow-team
                    div.TeamLabel.TeamLabel--reverse
                      div: img(v-bind:src="`https://cdn2.rebbl.net/images/logo/256x256/logo_${match.opponents[0].team.logo.toLowerCase()}.png`" alt="" class="TeamLabel-logo")
                      div.TeamLabel-info.TeamLabel-info--noScore
                        div.text-info {{ match.opponents[0].team.name }}
                  div.MatchRow-status
                    span.MatchStatus.MatchStatus--transparent
                      span
                        template(v-if="match.opponents[0].team.score > match.opponents[1].team.score")
                          span.MatchStatus-score.is-winner {{match.opponents[0].team.score}}
                          span.MatchStatus-score -
                          span.MatchStatus-score {{match.opponents[1].team.score}}
                        template(v-else-if="match.opponents[0].team.score < match.opponents[1].team.score")
                          span.MatchStatus-score {{match.opponents[0].team.score}}
                          span.MatchStatus-score -
                          span.MatchStatus-score.is-winner {{match.opponents[1].team.score}}
                        template(v-else)
                          span.MatchStatus-score {{match.opponents[0].team.score}}
                          span.MatchStatus-score -
                          span.MatchStatus-score {{match.opponents[1].team.score}}
                  div.MatchRow-team
                    div.TeamLabel
                      div: img(v-bind:src="`https://cdn2.rebbl.net/images/logo/256x256/logo_${match.opponents[1].team.logo.toLowerCase()}.png`" alt="" class="TeamLabel-logo")
                      div.TeamLabel-info.TeamLabel-info--noScore
                        div.text-info {{  match.opponents[1].team.name  }}
                template(v-if="match.counted === true && match.match_uuid === null")
                  div.col-2
                    button.btn.btn-primary.btn-sm(type="button" @click="resetMatch(match)") Reset
                template(v-if="match.counted === true && match.match_uuid !== null")
                  div.col-2
                    button.mx-1.btn.btn-success.btn-sm(type="button" @click="refreshMatch(match.match_uuid)") 
                      i(class="fa fa-refresh")  
                    button.mx-1.btn.btn-primary.btn-sm(type="button" data-toggle="modal" data-target="#clanScore" @click="selectedMatch=match") Change score
                    template(v-if="match.status === 'scheduled' &&  hasEIC(match, 1)")
                      button(type="button" class="btn btn-outline-info btn-sm active" @click="loadEicPlayers(match, 1)"  data-toggle="modal" data-target="#eicUse")
                        | EIC      

      .modal.fade(tabindex='-1' role='dialog' id="clanScore")
        .modal-dialog.modal-dialog-centered(role='document')
          .modal-content
            .modal-header
              slot(name="header")
                h5.modal-title Change score
                button.close(type='button' data-dismiss='modal' aria-label='Close')
                  span(aria-hidden='true') &times;
            .modal-body
              template(v-if="selectedMatch")
                .input-group.mb-3
                  .input-group-prepend
                    span#home.input-group-text home score
                  input.form-control(type='text' aria-describedby='home' v-model="selectedMatch.opponents[0].team.score")
                .input-group.mb-3
                  .input-group-prepend
                    span#away.input-group-text away score
                  input.form-control(type='text' aria-describedby='away' v-model="selectedMatch.opponents[1].team.score")            
              template(v-else-if="schedule")
                .input-group.mb-3
                  .input-group-prepend
                    span#home.input-group-text home score
                  input.form-control(type='text' aria-describedby='home' v-model="schedule.home.score")
                .input-group.mb-3
                  .input-group-prepend
                    span#away.input-group-text away score
                  input.form-control(type='text' aria-describedby='away' v-model="schedule.away.score")

            .modal-footer
              slot(name="footer")
                button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel &amp; Close
                template(v-if="selectedMatch")
                  button.btn.btn-primary(type='button' @click="saveMatchScore") Save changes
                template(v-else-if="schedule")
                  button.btn.btn-primary(type='button' @click="saveClanScore") Save changes

      .modal.fade(tabindex='-1' role='dialog' id="eicUse")
        .modal-dialog.modal-dialog-centered(role='document')
          .modal-content
            .modal-header
              slot(name="header")
                h5.modal-title Use Emergency Intensive Care
                button.close(type='button' data-dismiss='modal' aria-label='Close')
                  span(aria-hidden='true') &times;
            .modal-body
              template(v-if="selectedTeam")
                .input-group.mb-3
                  .input-group-prepend
                    span#home.input-group-text player
                    select.form-control(v-model="selectedPlayer")
                      option(v-for="player in eicPlayers" v-bind:value="player.id") {{ player.name }}
            .modal-footer
              slot(name="footer")
                button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel &amp; Close
                button.btn.btn-primary(type='button' @click="saveEICUse") Use                  

      .modal.fade(tabindex='-1' role='dialog' id="newBlood")
        .modal-dialog.modal-dialog-centered(role='document')
          template(v-if="selectedSide !== null")
            .modal-content
              .modal-header
                slot(name="header")
                  h5.modal-title Apply New Blood for {{`[${selectedSide.clan.name}]`}}
                  button.close(type='button' data-dismiss='modal' aria-label='Close')
                    span(aria-hidden='true') &times;
              .modal-body
                .input-group-prepend
                  span#home.input-group-text Replace
                  select.form-control(v-model="selectedTeam")
                    option(v-for="team in selectedSide.clan.teams" v-bind:value="team.team.id") {{ team.team.name }}
                .input-group-prepend.my-1
                  span#home.input-group-text with
                  input(type="text" v-model="newBloodTeam")
                  .flex
                    .m-1.btn.btn-primary.btn-sm(type="button" @click="checkTeam") 
                      i(class="fa fa-search")
                    template(v-if="newBloodOK")
                      .m-1.btn.btn-success.btn-sm(type="button") 
                        i(class="fa fa-check") 
                    template(v-if="newBloodOK !== null && !newBloodOK")
                      .m-1.btn.btn-danger.btn-sm(type="button") 
                        i(class="fa fa-close")  
                  
              .modal-footer
                slot(name="footer")
                  button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel &amp; Close
                  button.btn.btn-primary(type='button' @click="saveNewBlood" v-bind:disabled="!newBloodOK") Use    


block scripts
  - if (process.env.NODE_ENV === 'production')
    script(src="https://cdn2.rebbl.net/scripts/vue-2.6.10.min.js")
  - else
    script(src="/scripts/vue-2.6.10.min.js")

  script.
        // app Vue instance
    var app = new Vue({
      // app initial state
      data: {
        selectedMatch:null,
        schedules: [],
        schedule: null,
        selectedSide:null,
        selectedTeam: null,
        newBloodTeam:null,
        newBloodOK:null,
        selectedPlayer:null,
        eicPlayers:[]
      },
      computed: {
        numberOfRows() {
          return Math.ceil(this.schedules.length / 5);
        }
      },
      methods:{
        _schedule: function(r,c){
          return this.schedules[(r - 1) * 5 + (c - 1)];
        },
        async load(x){
          this.schedule = null;
          let response = await fetch(`/api/v2/clan/schedule/season 7/Division ${x}`);
          let data = await response.json();
          this.schedules = data.sort((a,b)=>{
              if(a.round > b.round) return 1;
              if(a.round < b.round) return -1;
              if(a.house > b.house) return 1;
              if(a.house < b.house) return -1;
              return 0;
          });
        },
        async showMatchup(s){
          let response = await fetch(`/api/v2/clan/season 7/${s.competition}/${s.round}/${s.house}`);
          this.schedule = await response.json();
        },
        reddit: function(clan, coach){
          let account = clan.members.find(function(x){return x.coach.toLowerCase() === coach.toLowerCase()});
          return account ? account.reddit : '??';
        },
        availablePowers: function(side){
          if(!side.usedPowers) return side.clan.powers;

          let powers = Object.assign({},side.clan.powers);
          Object.keys(side.usedPowers).map(key => {
            if(powers[key]) powers[key] += side.usedPowers[key];
            else powers[key] = side.usedPowers[key];
          });
          return powers;
        },
        togglePower: async function(e, side,power){
          if(!side.usedPowers) side.usedPowers = {};

          if(!e.target.attributes["aria-pressed"] || e.target.attributes["aria-pressed"].value === "false"){
            side.clan.powers[power]--; 
            if(side.usedPowers[power]) side.usedPowers[power]++; 
            else side.usedPowers[power] = 1;
            await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/${side.clan.name}/usepower/${power}`, {
              method: "PUT"
            });
          } else if(e.target.attributes["aria-pressed"].value === "true") {
            side.clan.powers[power]++;
            side.usedPowers[power]--;
            await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/${side.clan.name}/unusepower/${power}`, {
              method: "PUT"
            });
          }
        },
        powerUsed:function(side,power,i){
          if(!side.usedPowers || ((side.usedPowers[power] || 0) === 0)) return false;
          return (side.usedPowers[power] || 0) >= i;
        },
        getClass:function(side,power,i){
          return `btn btn-outline-info btn-sm ${this.powerUsed(side,power,i) ? 'active':''}`;   
        },
        saveClanScore:async function(){
          await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/${this.schedule.home.clan.name}/score/${this.schedule.home.score}`, {
            method: "PUT"
          });
          await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/${this.schedule.away.clan.name}/score/${this.schedule.away.score}`, {
            method: "PUT"
          });
          $('#clanScore').modal('hide');
        },
        resetMatch:async function(match){
          let response = await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/game/${match.contest_id}/reset`, {
            method: "PUT"
          });
          if (response.ok) match.counted = false;
        },
        refreshMatch:async function(id){
          await fetch(`/api/v2/clan/refreshMatch/${id}`);
        },
        saveMatchScore:async function(){
         await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/game/${this.selectedMatch.contest_id}/0/score/${this.selectedMatch.opponents[0].team.score}`, {
            method: "PUT"
          });
          await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/game/${this.selectedMatch.contest_id}/1/score/${this.selectedMatch.opponents[1].team.score}`, {
            method: "PUT"
          });
          $('#clanScore').modal('hide');
        },
        async loadEicPlayers(match, index) {
          const re = new RegExp(`\[${this.schedule.home.clan.name}]`,"i");
          this.selectedSide = re.test(match.opponents[index].team.name) ? this.schedule.home: this.schedule.away;

          this.selectedMatch = match;
          this.selectedTeam = match.opponents[index].team;

          let result = await fetch(`/api/v2/team/${this.selectedTeam.id}/players`)
          if(result.ok){
            let players = await result.json();
            this.eicPlayers = players.filter(p => p.casualties_sustained.filter(x => x !== "BadlyHurt").length > 0 );
          }
        },
        hasEIC: function(match, index){
          const re = new RegExp(`\\[${this.schedule.home.clan.name}]`,"i");
          let side = re.test(match.opponents[index].team.name) ? this.schedule.home: this.schedule.away;
          return side.clan.powers['emergencyIntensiveCare'] > 0;
        },
        saveEICUse:async function(){
          await fetch(`/api/v2/clan/eic/${this.selectedMatch.match_uuid}/${this.selectedPlayer}`, {
            method: "PUT"
          });


          if(!this.selectedSide.usedPowers) this.selectedSide.usedPowers = {};
          this.selectedSide.clan.powers['emergencyIntensiveCare']--; 
          if(this.selectedSide.usedPowers['emergencyIntensiveCare']) this.selectedSide.usedPowers['emergencyIntensiveCare']++; 
          else this.selectedSide.usedPowers['emergencyIntensiveCare'] = 1;
          await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/${this.selectedSide.clan.name}/usepower/emergencyIntensiveCare`, {
            method: "PUT"
          });

          $('#eicUse').modal('hide');
        },
        saveNewBlood:async function(){
          await fetch(`/api/v2/clan/${this.selectedSide.clan.name}/applynewblood/${this.selectedTeam}/${this.newBloodTeam}`, {
            method: "POST"
          });

          if(!this.selectedSide.usedPowers) this.selectedSide.usedPowers = {};
          this.selectedSide.clan.powers['newBlood']--; 
          if(this.selectedSide.usedPowers['newBlood']) this.selectedSide.usedPowers['newBlood']++; 
          else this.selectedSide.usedPowers['newBlood'] = 1;
          await fetch(`/api/v2/clan/season 7/${this.schedule.competition}/${this.schedule.round}/${this.schedule.house}/${this.selectedSide.clan.name}/usepower/newBlood`, {
            method: "PUT"
          });

          $('#newBlood').modal('hide');
        },
        checkTeam:async function(){
          let result = await fetch(`/api/v2/clan/team/${this.newBloodTeam}`);
          if(result.ok) this.newBloodOK = true;
          else this.newBloodOK =false;
        }

      },
      async mounted() {
        const storage = window.localStorage;
        if (storage)    
          this.powers = JSON.parse(localStorage.getItem('powers')) || [];

        if(this.powers.length === 0){
          let response = await fetch("/api/v2/clan/powers");
          this.powers = await response.json();
          storage.setItem('powers', JSON.stringify(this.powers));    
        }
      }
    })

    // mount
    app.$mount('#app')


              