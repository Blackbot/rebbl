extends ../layout.pug



block scripts
  script(src="https://cdn2.rebbl.net/scripts/knockout-3.4.2.js")
  script.
    function DateModel() {
        const self = this;
        // Editable data
        self.users = ko.observableArray([]);
        self.coach = ko.observable();
        self.discord = ko.observable();
        self.reddit = ko.observable();
        self.loading = ko.observable(true);
        self.filteredUsers = ko.computed(function() {
            if(!self.coach() && !self.reddit() && !self.discord()) {
                return self.users(); 
            } else {
                let val = self.coach() || self.reddit() || self.discord();
                return ko.utils.arrayFilter(self.users(), function(user) {
                    let regex = new RegExp("^"+val, "i");

                    return regex.test(user.coach) || regex.test(user.discord) || regex.test(user.reddit)   ;
                });
            }
        });

        self.edit = function(data,event){

        }

    }

    ko.bindingHandlers.foreachprop = {
        transformObject: function (obj) {
            var properties = [];
            ko.utils.objectForEach(obj, function (key, value) {
                properties.push({ key: key, value: value });
            });
            properties = properties.sort(function(a,b){return a.key > b.key ? 1 : -1;})
            return properties;
        },
        init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
            var properties = ko.pureComputed(function () {
            var obj = ko.utils.unwrapObservable(valueAccessor());
            return ko.bindingHandlers.foreachprop.transformObject(obj);
            });
            ko.applyBindingsToNode(element, { foreach: properties }, bindingContext);
            return { controlsDescendantBindings: true };
        }
    };

    const model = new DateModel();
    $(document).ready(function(){
        ko.applyBindings(model);

        var xhr = new XMLHttpRequest();
        xhr.open("GET", "/api/v1/admin/user",true)
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.responseType = 'json';

        xhr.onload  = function() {//Call a function when the state changes.
          model.users(xhr.response);
          model.loading(false);
        }

        xhr.send('');

    });

    

block content
  div(class="container")
    div(class="row col-12")
      div(class="col-2") Coach
      div(class="col-2") Discord
      div(class="col-2") Reddit
      div(class="col-2") Timezone
      a(role="button" class="col-2 btn btn-primary" data-bind="attr:{href: 'user/add' }" aria-pressed="true") new
    div(class="row col-12")
      div(class="col-2") 
        label(style="float: left; margin-left: -75px;") search
        input(data-bind="textInput : coach")
      div(class="col-2") 
        input(data-bind="textInput : discord")
      div(class="col-2") 
        input(data-bind="textInput : reddit")
    //ko if: loading
    div(class="row col-12 justify-content-center")
      i(class="fa fa-spinner fa-spin" style="margin-top:250px;font-size:96px;color: #e67b00;")
    // /ko
    div(data-bind="foreach: filteredUsers" )
      div(class="user-row row col-12")
        a(class="col-12" data-bind="attr:{href: 'user/' + reddit }")   
          div(style="min-width:25px;margin-left:-25px;")
            //ko if: $data.roles && $data.roles.indexOf('admin') > -1
            i(class="fa fa-star" style="color: #e67b00;float:left" title="admin")
            // /ko
          div(class="col-12 row" data-bind="foreachprop: $data")
            // ko if: key !== 'roles'
            div(data-bind="text: value" class="col-2" style="overflow:hidden;")
            // /ko






