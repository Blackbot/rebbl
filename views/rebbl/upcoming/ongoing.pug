extends ../sublayout.pug
include ../../nav-link

block navigation
  nav(class="navbar navbar-expand-md fixed-top navbar-dark bg-dark" style="min-height:80px;top:80px;justify-content:unset")
    button(class="navbar-toggler" type="button" data-toggle="collapse" data-target="#rebblSubNav" aria-controls="rebblSubNav" aria-expanded="false" aria-label="Toggle navigation")
      span(class="navbar-toggler-icon")
    a(class="navbar-brand d-md-none d-lg-none d-xl-none " href="#")= "STANDINGS - " + league 
    div(class="collapse navbar-collapse" id="rebblSubNav")
      ul(class="navbar-nav" style="margin:0 auto")
        +nav-link("Upcoming games", "/rebbl/upcoming")
        +nav-link("Ongoing games", "/rebbl/ongoing")
        +nav-link("Star Players", "/bloodbowl/starplayers")
        +nav-link("Legendary players", "/bloodbowl/legendaryplayers")
        +nav-link("Account", "/account")


block content
  style .btn-following-on {background-color:#4F4F4F}
  div(class="container")
    div(class="row justify-content-center no-gutters")
      h1 Is there something to watch?
      div(class="row justify-content-center")
        // ko foreach: leagues()
        button(class="btn btn-primary btn-sm" data-bind="text: $data, click:$parent.toggle.bind(this, $data)" style="margin-right:5px") 
        // /ko
      // ko foreach: $root.visibleLeagues()
      // ko foreach: $root.filteredCompetitions($data)
      div(class="row col-12 justify-content-center")  
        h3(data-bind="text: `${$data.league} - ${$data.competition}`") 
      // ko foreach: $root.filterGames($data)
      div(class="row col-12")  
        div(class="row col-12")
          div(class="col-12 row no-gutters justify-content-center")
            div(class="col-5")
              div(class="col-12 row no-gutters" style="padding:unset")
                div(class="col-12" style="text-align: right;padding-right:5px;")
                  div(class="float-right d-none d-md-block"): img(data-bind="attr: {src: $root.logo(LogoTeam1)}" alt="" class="TeamLabel-logo" )
                  div(data-bind="text: NameTeam1" style="font-size:1.2em")
                  div(class="TeamLabel-coach " data-bind="text: NameCoach1" style="margin-top:-7px" )
            div(class="col-1" style="text-align:center" )
              span(class="MatchStatus-score" data-bind="text: ScoreTeam1") 
              span(class="MatchStatus-score") -
              span(class="MatchStatus-score" data-bind="text: ScoreTeam2") 
              div(class="TeamLabel-coach " data-bind="text: `Turn ${CurrentTurn}`" style="margin-top:-7px" )
            div(class="col-5")
              div(class="col-12 row no-gutters" style="padding:unset")
                div(class="col-12")
                  div(class="float-left d-none d-md-block" style="padding-right:5px"): img(data-bind="attr: {src: $root.logo(LogoTeam2)}" alt="" class="TeamLabel-logo")
                  div(data-bind="text: NameTeam2"  style="font-size:1.2em")
                  div(class="TeamLabel-coach " data-bind="text: NameCoach2" style="margin-top:-7px" )
      // /ko
      // /ko
      br
      // /ko


block scripts
  script(src="https://cdn2.rebbl.net/scripts/knockout-3.4.2.js")
  script.
    function Model() {
      const self = this;
      // Editable data
      self.games = ko.observableArray([]);
      self.competitions = ko.observableArray([]);
      self.leagues = ko.observableArray([]);
      self.visibleLeagues =  ko.observableArray([])

      self.load = async function(){
        let result = await fetch(`/api/v1/upcoming/ongoing`);

        if (result.ok){
            let data = await result.json();
            self.games(data);
            let leagues = data.map(d =>{return {competition: d.CompetitionName, league:d.LeagueName}});
            self.competitions([...new Set(leagues)]);
            leagues = data.map(d => `${d.LeagueName}`);
            self.leagues([...new Set(leagues)]);
            self.visibleLeagues([...new Set(leagues)]);

        }
      }
      self.logo = function(logo){
        return `https://cdn2.rebbl.net/images/logo/logo_${logo.toLowerCase()}.png`;
      }
      self.filterGames = function (league){
        return self.games().filter(x => x.LeagueName === league.league && x.CompetitionName === league.competition);
      }
      self.toggle = function(league,data,event){
        
        $(event.currentTarget || event.target ).toggleClass("btn-secondary");
        $(event.currentTarget || event.target ).toggleClass("btn-primary");

        let index = self.visibleLeagues.indexOf(league);
        if (index > -1){
          self.visibleLeagues.splice(index,1);
        } else {
          self.visibleLeagues.push(league);
        }
      }
      self.filteredCompetitions = function(league){
        return self.competitions().filter(x => self.visibleLeagues().indexOf(league)>-1 && x.league === league);
      }
    }
    const model = new Model();
    $(document).ready(async function(){
        ko.applyBindings(model);
        model.load();
    });